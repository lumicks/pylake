import numpy as np
import pytest

from lumicks.pylake.detail.utilities import temp_seed
from lumicks.pylake.simulation.diffusion import simulate_diffusive_tracks


def test_simulate_diffusive_tracks():
    """Test whether we can simulate some tracks."""
    ref_tracks = (
        (23.57533431731355, 22.75154529314444, 7.214743532202872),
        (7.123114086013446, 4.580339557294491, 13.290340369569428),
    )

    dt = 5.0
    with temp_seed(0):
        tracks = simulate_diffusive_tracks(
            diffusion_constant=2.0,
            steps=3,
            dt=dt,
            observation_noise=7.0,
            num_tracks=2,
        )

    for t, ref in zip(tracks, ref_tracks):
        np.testing.assert_allclose(t.time_idx, np.arange(3))
        np.testing.assert_allclose(t.seconds, np.arange(3) * dt)
        np.testing.assert_allclose(t.position, ref)


def test_add_simulated_tracks():
    """Test whether we can add kymograph tracks.

    It should be possible to add tracks generated by separate calls with the same kymo properties.
    """
    params = {"diffusion_constant": 4, "steps": 10, "dt": 0.01, "num_tracks": 2}
    tracks = simulate_diffusive_tracks(**params) + simulate_diffusive_tracks(**params)
    assert len(tracks) == 4
